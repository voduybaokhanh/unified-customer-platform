{
  "info": {
    "name": "Unified Customer Platform - Complete API",
    "description": "Complete API collection for CRM and Live Chat modules\n\n**Setup:**\n1. Set variable `base_url` = http://localhost:3000\n2. After creating a customer, copy `id` to variable `customer_id`\n3. After starting a chat, copy `sessionId` to variable `session_id`\n\n**Test Order:**\n1. CRM APIs (1-6)\n2. Start chat with HTML client\n3. Copy session ID\n4. Chat REST APIs (11-15)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "unified-customer-platform",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "üìã CRM - Customer Management",
      "item": [
        {
          "name": "1. Create Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"John Doe\",\n  \"phone\": \"0123456789\",\n  \"company\": \"ABC Corporation\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "T·∫°o kh√°ch h√†ng m·ªõi trong h·ªá th·ªëng CRM"
          }
        },
        {
          "name": "2. Get All Customers (Paginated)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/customers?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (default: 10, max: 100)"
                }
              ]
            },
            "description": "L·∫•y danh s√°ch kh√°ch h√†ng c√≥ ph√¢n trang"
          }
        },
        {
          "name": "3. Find Customer by Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/customers/email/john.doe@example.com",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "email", "john.doe@example.com"]
            },
            "description": "T√¨m kh√°ch h√†ng theo email (d√πng cho Live Chat lookup)"
          }
        },
        {
          "name": "4. Get Customer by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/customers/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "{{customer_id}}"]
            },
            "description": "L·∫•y th√¥ng tin chi ti·∫øt kh√°ch h√†ng theo ID"
          }
        },
        {
          "name": "5. Update Customer",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe Updated\",\n  \"phone\": \"0987654321\",\n  \"company\": \"XYZ Corporation\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "{{customer_id}}"]
            },
            "description": "C·∫≠p nh·∫≠t th√¥ng tin kh√°ch h√†ng"
          }
        },
        {
          "name": "6. Delete Customer",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/customers/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "{{customer_id}}"]
            },
            "description": "X√≥a kh√°ch h√†ng (ch·ªâ khi kh√¥ng c√≥ chat/ticket li√™n quan)"
          }
        }
      ],
      "description": "APIs qu·∫£n l√Ω kh√°ch h√†ng (CRUD operations)"
    },
    {
      "name": "‚ùå CRM - Error Cases",
      "item": [
        {
          "name": "7. Create - Duplicate Email (Error 409)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"Another John\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Test validation: Email ƒë√£ t·ªìn t·∫°i"
          }
        },
        {
          "name": "8. Create - Invalid Email (Error 400)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\",\n  \"name\": \"Test User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Test validation: Email format kh√¥ng h·ª£p l·ªá"
          }
        },
        {
          "name": "9. Create - Missing Required Fields (Error 400)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"0123456789\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Test validation: Thi·∫øu email v√† name (required)"
          }
        },
        {
          "name": "10. Get - Customer Not Found (Error 404)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/customers/00000000-0000-0000-0000-000000000000",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "customers",
                "00000000-0000-0000-0000-000000000000"
              ]
            },
            "description": "Test error: Customer kh√¥ng t·ªìn t·∫°i"
          }
        }
      ],
      "description": "Test cases cho validation v√† error handling"
    },
    {
      "name": "üí¨ Live Chat - Session Management",
      "item": [
        {
          "name": "11. Get Active Chat Sessions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/active",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "active"]
            },
            "description": "L·∫•y danh s√°ch t·∫•t c·∫£ chat sessions ƒëang active (ch∆∞a ƒë√≥ng)"
          }
        },
        {
          "name": "12. Get Chat Session Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}"]
            },
            "description": "L·∫•y th√¥ng tin chi ti·∫øt c·ªßa m·ªôt chat session (bao g·ªìm th√¥ng tin customer)"
          }
        },
        {
          "name": "13. Get Chat History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}/messages",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}", "messages"]
            },
            "description": "L·∫•y to√†n b·ªô l·ªãch s·ª≠ chat c·ªßa m·ªôt session (t·∫•t c·∫£ messages)"
          }
        },
        {
          "name": "14. Assign Agent to Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"agentId\": \"agent-001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}/assign",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}", "assign"]
            },
            "description": "G√°n agent v√†o m·ªôt chat session (th∆∞·ªùng ƒë∆∞·ª£c g·ªçi t·ª± ƒë·ªông khi agent join)"
          }
        },
        {
          "name": "15. Close Chat Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}/close",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}", "close"]
            },
            "description": "ƒê√≥ng m·ªôt chat session (status: active ‚Üí closed)"
          }
        }
      ],
      "description": "REST APIs qu·∫£n l√Ω chat sessions\n\n**Note:** WebSocket events kh√¥ng test ƒë∆∞·ª£c qua Postman. D√πng `chat-test.html` v√† `agent-test.html` ƒë·ªÉ test real-time features."
    },
    {
      "name": "üìñ Documentation & Info",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Simple health check - ki·ªÉm tra server c√≥ ƒëang ch·∫°y kh√¥ng"
          }
        }
      ],
      "description": "Utility endpoints"
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "customer_id",
      "value": "",
      "type": "string",
      "description": "ID c·ªßa customer (copy t·ª´ response sau khi t·∫°o customer)"
    },
    {
      "key": "session_id",
      "value": "",
      "type": "string",
      "description": "ID c·ªßa chat session (copy t·ª´ HTML test client ho·∫∑c GET active sessions)"
    }
  ]
}
