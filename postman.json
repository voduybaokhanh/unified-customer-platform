{
  "info": {
    "name": "Unified Customer Platform - Complete API Collection",
    "_postman_id": "unified-customer-platform-2025-v2",
    "description": "Complete API: CRM + Live Chat + Tickets + Integration (Timeline)\n\n**Quick Start:**\n1. Run `1. Create Customer` ‚Üí auto save `customer_id`\n2. Use chat-test.html ‚Üí copy `sessionId` ‚Üí paste to `session_id` variable\n3. Run `16. Convert Chat to Ticket` ‚Üí auto save `ticket_id`\n4. Run Timeline APIs to see 360¬∞ customer view\n\n**Variables:** base_url, customer_id, session_id, ticket_id, ticket_number",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.0.0"
  },
  "item": [
    {
      "name": "üìã CRM - Customer Management",
      "item": [
        {
          "name": "1. Create Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "  const res = pm.response.json();",
                  "  pm.collectionVariables.set('customer_id', res.data.id);",
                  "  console.log('‚úÖ Saved customer_id:', res.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"John Doe\",\n  \"phone\": \"0123456789\",\n  \"company\": \"ABC Corp\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "T·∫°o customer m·ªõi. Auto-save customer_id v√†o variable."
          }
        },
        {
          "name": "2. Get All Customers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/customers?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"],
              "query": [
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "10" }
              ]
            },
            "description": "L·∫•y danh s√°ch customers c√≥ ph√¢n trang"
          }
        },
        {
          "name": "3. Find Customer by Email",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/customers/email/john.doe@example.com",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "email", "john.doe@example.com"]
            },
            "description": "T√¨m customer theo email (d√πng cho chat lookup)"
          }
        },
        {
          "name": "4. Get Customer by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/customers/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "{{customer_id}}"]
            },
            "description": "L·∫•y th√¥ng tin chi ti·∫øt customer"
          }
        },
        {
          "name": "5. Update Customer",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe Updated\",\n  \"phone\": \"0987654321\",\n  \"company\": \"XYZ Corp\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "{{customer_id}}"]
            },
            "description": "C·∫≠p nh·∫≠t th√¥ng tin customer"
          }
        },
        {
          "name": "6. Delete Customer",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{base_url}}/api/customers/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "{{customer_id}}"]
            },
            "description": "X√≥a customer (ch·ªâ khi kh√¥ng c√≥ data li√™n quan)"
          }
        }
      ],
      "description": "APIs qu·∫£n l√Ω kh√°ch h√†ng (CRUD)"
    },
    {
      "name": "‚ùå CRM - Error Cases",
      "item": [
        {
          "name": "7. Create - Duplicate Email (409)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"name\": \"Dup User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Test validation: Email ƒë√£ t·ªìn t·∫°i"
          }
        },
        {
          "name": "8. Create - Invalid Email (400)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\",\n  \"name\": \"Invalid\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Test validation: Email format sai"
          }
        },
        {
          "name": "9. Create - Missing Fields (400)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"0123456789\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Test validation: Thi·∫øu required fields"
          }
        },
        {
          "name": "10. Get - Customer Not Found (404)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/customers/00000000-0000-0000-0000-000000000000",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "customers",
                "00000000-0000-0000-0000-000000000000"
              ]
            },
            "description": "Test error: Customer kh√¥ng t·ªìn t·∫°i"
          }
        }
      ],
      "description": "Test cases cho validation v√† error handling"
    },
    {
      "name": "üí¨ Live Chat - Session Management",
      "item": [
        {
          "name": "11. Get Active Sessions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const res = pm.response.json();",
                  "  if (res.data && res.data[0]) {",
                  "    pm.collectionVariables.set('session_id', res.data[0].id);",
                  "    console.log('‚úÖ Saved session_id:', res.data[0].id);",
                  "  }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/active",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "active"]
            },
            "description": "L·∫•y active sessions. Auto-save session_id ƒë·∫ßu ti√™n."
          }
        },
        {
          "name": "12. Get Session Details",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}"]
            },
            "description": "L·∫•y chi ti·∫øt session (bao g·ªìm customer info)"
          }
        },
        {
          "name": "13. Get Chat History",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}/messages",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}", "messages"]
            },
            "description": "L·∫•y to√†n b·ªô chat history c·ªßa session"
          }
        },
        {
          "name": "14. Assign Agent",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"agentId\": \"agent-001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}/assign",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}", "assign"]
            },
            "description": "G√°n agent v√†o session"
          }
        },
        {
          "name": "15. Close Session",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": { "mode": "raw", "raw": "{}" },
            "url": {
              "raw": "{{base_url}}/api/chat/sessions/{{session_id}}/close",
              "host": ["{{base_url}}"],
              "path": ["api", "chat", "sessions", "{{session_id}}", "close"]
            },
            "description": "ƒê√≥ng chat session"
          }
        }
      ],
      "description": "REST APIs qu·∫£n l√Ω chat sessions\n\nNote: WebSocket events test b·∫±ng chat-test.html v√† agent-test.html"
    },
    {
      "name": "üé´ Tickets - Help Desk",
      "item": [
        {
          "name": "16. Convert Chat to Ticket ‚≠ê",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "  const res = pm.response.json();",
                  "  pm.collectionVariables.set('ticket_id', res.data.id);",
                  "  pm.collectionVariables.set('ticket_number', res.data.ticketNumber);",
                  "  console.log('‚úÖ Saved ticket_id & ticket_number');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"subject\": \"H·ªó tr·ª£ t·ª´ Live Chat\",\n  \"priority\": \"high\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets/convert-from-chat/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "convert-from-chat", "{{session_id}}"]
            },
            "description": "‚≠ê CORE FEATURE: Convert chat ‚Üí ticket v·ªõi 1 click!\n\nChat history t·ª± ƒë·ªông th√†nh ticket description."
          }
        },
        {
          "name": "17. Create Ticket Manually",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "  const res = pm.response.json();",
                  "  pm.collectionVariables.set('ticket_id', res.data.id);",
                  "  pm.collectionVariables.set('ticket_number', res.data.ticketNumber);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customer_id}}\",\n  \"subject\": \"Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p\",\n  \"description\": \"T√¥i kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng\",\n  \"priority\": \"high\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets"]
            },
            "description": "T·∫°o ticket th·ªß c√¥ng (kh√¥ng qua chat)"
          }
        },
        {
          "name": "18. Get All Tickets",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/tickets?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets"],
              "query": [
                { "key": "page", "value": "1" },
                { "key": "limit", "value": "10" },
                { "key": "status", "value": "open", "disabled": true },
                { "key": "priority", "value": "high", "disabled": true }
              ]
            },
            "description": "L·∫•y danh s√°ch tickets (c√≥ th·ªÉ filter by status, priority)"
          }
        },
        {
          "name": "19. Get Ticket by Number",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/tickets/number/TK-00001",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "number", "TK-00001"]
            },
            "description": "T√¨m ticket theo ticket number (TK-00001, TK-00002...)"
          }
        },
        {
          "name": "20. Get Ticket by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}"]
            },
            "description": "L·∫•y chi ti·∫øt ticket (bao g·ªìm chat history n·∫øu c√≥)"
          }
        },
        {
          "name": "21. Get Customer Tickets",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/tickets/customer/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "customer", "{{customer_id}}"]
            },
            "description": "L·∫•y t·∫•t c·∫£ tickets c·ªßa m·ªôt customer"
          }
        },
        {
          "name": "22. Update Ticket Status",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"in_progress\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}"]
            },
            "description": "Update status: open, in_progress, resolved, closed"
          }
        },
        {
          "name": "23. Update Ticket Priority",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"priority\": \"urgent\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}"]
            },
            "description": "Update priority: low, medium, high, urgent"
          }
        },
        {
          "name": "24. Assign Agent to Ticket",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignedTo\": \"agent-001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}"]
            },
            "description": "G√°n ticket cho agent x·ª≠ l√Ω"
          }
        },
        {
          "name": "25. Add Comment to Ticket",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"agent-001\",\n  \"comment\": \"ƒê√£ ki·ªÉm tra v√† x√°c nh·∫≠n v·∫•n ƒë·ªÅ\",\n  \"isInternal\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}/comments",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}", "comments"]
            },
            "description": "Th√™m comment (isInternal: false=public, true=internal note)"
          }
        },
        {
          "name": "26. Add Internal Note",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"agent-002\",\n  \"comment\": \"Customer n√†y ƒë√£ li√™n h·ªá 3 l·∫ßn\",\n  \"isInternal\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}/comments",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}", "comments"]
            },
            "description": "Th√™m internal note (ch·ªâ team n·ªôi b·ªô th·∫•y)"
          }
        },
        {
          "name": "27. Get Ticket Comments",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}/comments",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}", "comments"]
            },
            "description": "L·∫•y t·∫•t c·∫£ comments c·ªßa ticket"
          }
        },
        {
          "name": "28. Close Ticket",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"closed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tickets/{{ticket_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "tickets", "{{ticket_id}}"]
            },
            "description": "ƒê√≥ng ticket"
          }
        }
      ],
      "description": "APIs qu·∫£n l√Ω tickets & help desk"
    },
    {
      "name": "üîó Integration - Timeline & Stats",
      "item": [
        {
          "name": "29. Get Customer Timeline (360¬∞ View) ‚≠ê",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/timeline/customer/{{customer_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "timeline", "customer", "{{customer_id}}"]
            },
            "description": "‚≠ê CORE FEATURE: L·∫•y to√†n b·ªô timeline c·ªßa customer\n\nBao g·ªìm: chat sessions, tickets, status changes, comments - t·∫•t c·∫£ theo th·ª© t·ª± th·ªùi gian."
          }
        },
        {
          "name": "30. Get Customer Stats",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/timeline/customer/{{customer_id}}/stats",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "timeline",
                "customer",
                "{{customer_id}}",
                "stats"
              ]
            },
            "description": "Th·ªëng k√™ t·ªïng quan customer:\n- T·ªïng chat sessions\n- T·ªïng tickets\n- Tickets breakdown by status\n- Last activity time"
          }
        },
        {
          "name": "31. Get Recent Timeline (Dashboard)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/timeline/recent?limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "timeline", "recent"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of recent activities"
                }
              ]
            },
            "description": "L·∫•y timeline g·∫ßn ƒë√¢y c·ªßa T·∫§T C·∫¢ customers\n\nD√πng cho dashboard view - xem ho·∫°t ƒë·ªông g·∫ßn nh·∫•t c·ªßa h·ªá th·ªëng."
          }
        },
        {
          "name": "32. Get Event Details",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/timeline/event/{{session_id}}?type=chat",
              "host": ["{{base_url}}"],
              "path": ["api", "timeline", "event", "{{session_id}}"],
              "query": [
                {
                  "key": "type",
                  "value": "chat",
                  "description": "Event type: chat | ticket_created | ticket_updated | ticket_closed"
                }
              ]
            },
            "description": "L·∫•y chi ti·∫øt m·ªôt event trong timeline\n\nV√≠ d·ª•: Click v√†o m·ªôt chat event ‚Üí Xem full chat history"
          }
        }
      ],
      "description": "APIs t·ªïng h·ª£p timeline v√† th·ªëng k√™ t·ª´ t·∫•t c·∫£ modules\n\n‚≠ê ƒê√¢y l√† ph·∫ßn QUAN TR·ªåNG - cung c·∫•p 360¬∞ customer view"
    },
    {
      "name": "üìñ Documentation & Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/customers",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"]
            },
            "description": "Simple health check - server c√≥ ƒëang ch·∫°y kh√¥ng"
          }
        }
      ],
      "description": "Utility endpoints"
    }
  ],
  "variable": [
    { "key": "base_url", "value": "http://localhost:3000", "type": "string" },
    { "key": "customer_id", "value": "", "type": "string" },
    { "key": "session_id", "value": "", "type": "string" },
    { "key": "ticket_id", "value": "", "type": "string" },
    { "key": "ticket_number", "value": "", "type": "string" }
  ]
}
